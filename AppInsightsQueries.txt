
// Basic query
	traces 
	| extend component = tostring(extract("Component: ([^:\\/\\s]+);", 1, message)) 
	| where component == "ChatProxy"
	| limit 10
	
// Query for CE log entries
traces
| extend product = tostring(extract("Product: ([^: .*]+) - Component", 1, message))
| extend component = tostring(extract("Component: ([^: .*]+);", 1, message))
| extend componentGuid = tostring(extract("Component: .*;([^: .*]+) -", 1, message))
| extend sequenceNumber = toint(extract("Sequence: ([^: .*]+) -", 1, message))
| extend module = tostring(extract("Module: ([^: .*]+) -", 1, message))
| extend innerMessage = tostring(extract("Message: ([^:.*]+) - Parameters", 1, message))
| extend parameters = tostring(extract("Parameters: ([^.*]+)", 1, message))
| where module contains "Buzz"
| sort by timestamp desc | sort by sequenceNumber desc | take 100

// Query for CE log entries
traces 
| extend component = tostring(extract("Component: ([^: .*]+);", 1, message))
| extend componentGuid = tostring(extract("Component: .*;([^: .*]+) -", 1, message))
| extend sequenceNumber = toint(extract("Sequence: ([^: .*]+) -", 1, message))
| extend module = tostring(extract("Module: ([^: .*]+) -", 1, message))
| extend innerMessage = tostring(extract("Message: ([^:.*]+) - Parameters", 1, message))
| extend parameters = tostring(extract("Parameters: ([^.*]+)", 1, message))
| top 100 by sequenceNumber

// Extend component name
| extend component = tostring(extract("Component: ([^: .*]+);", 1, message))

// Extend component guid
| extend componentGuid = tostring(extract("Component: .*;([^: .*]+) -", 1, message))

// Extend sequence number
| extend sequenceNumber = toint(extract("Sequence: ([^: .*]+) -", 1, message))

// Extend module
| extend module = tostring(extract("Module: ([^: .*]+) -", 1, message))

// Extend inner message
| extend innerMessage = tostring(extract("Message: ([^:.*]+) - Parameters", 1, message))

// Extend parameters
| extend parameters = tostring(extract("Parameters: ([^.*]+)", 1, message))

// Get first 10 by order
top 10 by sequenceNumber desc

// Get first 10 by order (ineffective)
| sort by sequenceNumber desc | take 10
